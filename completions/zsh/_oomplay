#compdef oomplay

autoload -U is-at-least

_oomplay() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'-V[Print version information]' \
'--version[Print version information]' \
":: :_oomplay_commands" \
"*::: :->oomplay" \
&& ret=0
    case $state in
    (oomplay)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:oomplay-command-$line[1]:"
        case $line[1] in
            (start)
_arguments "${_arguments_options[@]}" \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_oomplay__start_commands" \
"*::: :->start" \
&& ret=0

    case $state in
    (start)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:oomplay-start-command-$line[1]:"
        case $line[1] in
            (redis)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(postgres)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-u+[]:USER: ' \
'--user=[]:USER: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(mysql)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-u+[]:USER: ' \
'--user=[]:USER: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
        esac
    ;;
esac
;;
(stop)
_arguments "${_arguments_options[@]}" \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_oomplay__stop_commands" \
"*::: :->stop" \
&& ret=0

    case $state in
    (stop)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:oomplay-stop-command-$line[1]:"
        case $line[1] in
            (redis)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(postgres)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-u+[]:USER: ' \
'--user=[]:USER: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(mysql)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-u+[]:USER: ' \
'--user=[]:USER: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
        esac
    ;;
esac
;;
(clear)
_arguments "${_arguments_options[@]}" \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'-r[Drop database]' \
'--recreate[Drop database]' \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_oomplay__clear_commands" \
"*::: :->clear" \
&& ret=0

    case $state in
    (clear)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:oomplay-clear-command-$line[1]:"
        case $line[1] in
            (redis)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-r[Drop database]' \
'--recreate[Drop database]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(postgres)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-u+[]:USER: ' \
'--user=[]:USER: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-r[Drop database]' \
'--recreate[Drop database]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(mysql)
_arguments "${_arguments_options[@]}" \
'-P+[]:PORT: ' \
'--port=[]:PORT: ' \
'-u+[]:USER: ' \
'--user=[]:USER: ' \
'-p+[]:PASSWORD: ' \
'--password=[]:PASSWORD: ' \
'-d+[]:DATABASE: ' \
'--database=[]:DATABASE: ' \
'-f+[file path containing backends]:FILE: ' \
'--file=[file path containing backends]:FILE: ' \
'--version[Print version information]' \
'-r[Drop database]' \
'--recreate[Drop database]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
        esac
    ;;
esac
;;
(completion)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':shell -- Target shell name:(bash elvish fish powershell zsh)' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_oomplay_commands] )) ||
_oomplay_commands() {
    local commands; commands=(
'start:Start playgrounds' \
'stop:Stop playgrounds' \
'clear:Clear playgrounds' \
'completion:Output shell completion code' \
    )
    _describe -t commands 'oomplay commands' commands "$@"
}
(( $+functions[_oomplay__clear_commands] )) ||
_oomplay__clear_commands() {
    local commands; commands=(
'redis:Redis store' \
'postgres:Postgres store' \
'mysql:Mysql store' \
    )
    _describe -t commands 'oomplay clear commands' commands "$@"
}
(( $+functions[_oomplay__completion_commands] )) ||
_oomplay__completion_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay completion commands' commands "$@"
}
(( $+functions[_oomplay__clear__mysql_commands] )) ||
_oomplay__clear__mysql_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay clear mysql commands' commands "$@"
}
(( $+functions[_oomplay__start__mysql_commands] )) ||
_oomplay__start__mysql_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay start mysql commands' commands "$@"
}
(( $+functions[_oomplay__stop__mysql_commands] )) ||
_oomplay__stop__mysql_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay stop mysql commands' commands "$@"
}
(( $+functions[_oomplay__clear__postgres_commands] )) ||
_oomplay__clear__postgres_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay clear postgres commands' commands "$@"
}
(( $+functions[_oomplay__start__postgres_commands] )) ||
_oomplay__start__postgres_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay start postgres commands' commands "$@"
}
(( $+functions[_oomplay__stop__postgres_commands] )) ||
_oomplay__stop__postgres_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay stop postgres commands' commands "$@"
}
(( $+functions[_oomplay__clear__redis_commands] )) ||
_oomplay__clear__redis_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay clear redis commands' commands "$@"
}
(( $+functions[_oomplay__start__redis_commands] )) ||
_oomplay__start__redis_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay start redis commands' commands "$@"
}
(( $+functions[_oomplay__stop__redis_commands] )) ||
_oomplay__stop__redis_commands() {
    local commands; commands=()
    _describe -t commands 'oomplay stop redis commands' commands "$@"
}
(( $+functions[_oomplay__start_commands] )) ||
_oomplay__start_commands() {
    local commands; commands=(
'redis:Redis store' \
'postgres:Postgres store' \
'mysql:Mysql store' \
    )
    _describe -t commands 'oomplay start commands' commands "$@"
}
(( $+functions[_oomplay__stop_commands] )) ||
_oomplay__stop_commands() {
    local commands; commands=(
'redis:Redis store' \
'postgres:Postgres store' \
'mysql:Mysql store' \
    )
    _describe -t commands 'oomplay stop commands' commands "$@"
}

_oomplay "$@"